from NeuroneMnésique import NeuroneMnésique
from Synapse import Synapse
from FeedbackCircuit import FeedbackCircuit

class Aire46:
    def __init__(self, working_memory_neuron_params, synapse_params, feedback_params):
        """
        Modélise l'aire 46, impliquée dans la mémoire de travail, la concentration, et la gestion de tâches complexes.

        Parameters:
        working_memory_neuron_params (dict): Paramètres pour les neurones de mémoire de travail.
        synapse_params (dict): Paramètres pour les synapses.
        feedback_params (dict): Paramètres pour le circuit de feedback.
        """
        self.neurones_working_memory = [NeuroneMnésique(**working_memory_neuron_params) for _ in range(150)]
        self.synapses = [Synapse(**synapse_params) for _ in range(150)]
        self.feedback_circuit = FeedbackCircuit(**feedback_params)

    def gerer_memoire_de_travail(self, input_data):
        """
        Simule la mémoire de travail et la gestion des informations pour des tâches complexes dans l'aire 46.

        Parameters:
        input_data (float): Intensité des données pour la mémoire de travail.
        Returns:
        dict: Réponses des neurones de mémoire de travail après traitement.
        """
        reponses = []
        for i, neurone in enumerate(self.neurones_working_memory):
            neurone.receive_input(input_data * 1.1)  # Modulation pour mémoire de travail
            response = neurone.activate()
            self.synapses[i].transmit(response)
            reponses.append(response)

        # Ajustement des réponses avec le circuit de feedback
        self.feedback_circuit.apply_feedback(any(reponses))
       
        return {
            "reponses_neurones_working_memory": reponses,
            "adjustment_feedback": self.feedback_circuit.apply_feedback(True)
        }

# Simulation de l'aire 46
def simulate_aire46():
    # Paramètres ajustables pour l'aire 46
    working_memory_neuron_params = {"threshold": 1.0, "response_strength": 0.8}
    synapse_params = {"weight": 0.5, "neurotransmitter": "dopamine"}
    feedback_params = {"reinforcement_sensitivity": 0.4, "decay_factor": 0.1, "max_strength": 1.6}

    aire46 = Aire46(working_memory_neuron_params, synapse_params, feedback_params)

    # Simuler des données de mémoire de travail
    data_inputs = [0.9, 1.2, 0.8, 1.3, 1.0]  # Liste des données de mémoire de travail et de concentration
    for cycle, data in enumerate(data_inputs):
        resultats = aire46.gerer_memoire_de_travail(data)
        print(f"Cycle {cycle + 1}: Données de mémoire de travail = {data}, Résultats = {resultats}")

# Exécute la simulation
simulate_aire46()

