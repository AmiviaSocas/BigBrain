from NeuroneMoteur import NeuroneMoteur
from Synapse import Synapse
from FeedbackCircuit import FeedbackCircuit

class Aire8:
    def __init__(self, eye_movement_neuron_params, synapse_params, feedback_params):
        """
        Modélise l'aire 8, impliquée dans le contrôle des mouvements oculaires et de l'attention visuelle.

        Parameters:
        eye_movement_neuron_params (dict): Paramètres pour les neurones de mouvement oculaire.
        synapse_params (dict): Paramètres pour les synapses.
        feedback_params (dict): Paramètres pour le circuit de feedback.
        """
        self.neurones_mouvement_oculaire = [NeuroneMoteur(**eye_movement_neuron_params) for _ in range(120)]
        self.synapses = [Synapse(**synapse_params) for _ in range(120)]
        self.feedback_circuit = FeedbackCircuit(**feedback_params)

    def controler_mouvements_oculaires(self, input_data):
        """
        Simule le contrôle des mouvements oculaires et de l'attention visuelle dans l'aire 8.

        Parameters:
        input_data (float): Intensité des données pour le mouvement oculaire.
        Returns:
        dict: Réponses des neurones de mouvement oculaire après traitement.
        """
        reponses = []
        for i, neurone in enumerate(self.neurones_mouvement_oculaire):
            neurone.receive_input(input_data * 1.1)  # Modulation pour mouvement oculaire
            response = neurone.activate()
            self.synapses[i].transmit(response)
            reponses.append(response)

        # Ajustement des réponses avec le circuit de feedback
        self.feedback_circuit.apply_feedback(any(reponses))
       
        return {
            "reponses_neurones_mouvement_oculaire": reponses,
            "adjustment_feedback": self.feedback_circuit.apply_feedback(True)
        }

# Simulation de l'aire 8
def simulate_aire8():
    # Paramètres ajustables pour l'aire 8
    eye_movement_neuron_params = {"threshold": 1.0, "response_strength": 0.9}
    synapse_params = {"weight": 0.55, "neurotransmitter": "glutamate"}
    feedback_params = {"reinforcement_sensitivity": 0.35, "decay_factor": 0.1, "max_strength": 1.5}

    aire8 = Aire8(eye_movement_neuron_params, synapse_params, feedback_params)

    # Simuler des données pour le mouvement oculaire
    data_inputs = [1.0, 1.2, 0.9, 1.3, 1.1]  # Liste des données pour le contrôle visuel
    for cycle, data in enumerate(data_inputs):
        resultats = aire8.controler_mouvements_oculaires(data)
        print(f"Cycle {cycle + 1}: Données pour mouvement oculaire = {data}, Résultats = {resultats}")

# Exécute la simulation
simulate_aire8()
